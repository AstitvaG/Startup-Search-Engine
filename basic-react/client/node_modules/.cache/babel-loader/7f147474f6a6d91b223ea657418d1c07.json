{"ast":null,"code":"/**\n * `AuthorizationError` error.\n *\n * AuthorizationError represents an error in response to an authorization\n * request.  For details, refer to RFC 6749, section 4.1.2.1.\n *\n * References:\n *   - [The OAuth 2.0 Authorization Framework](http://tools.ietf.org/html/rfc6749)\n *\n * @constructor\n * @param {String} [message]\n * @param {String} [code]\n * @param {String} [uri]\n * @param {Number} [status]\n * @api public\n */\nfunction AuthorizationError(message, code, uri, status) {\n  if (!status) {\n    switch (code) {\n      case 'access_denied':\n        status = 403;\n        break;\n\n      case 'server_error':\n        status = 502;\n        break;\n\n      case 'temporarily_unavailable':\n        status = 503;\n        break;\n    }\n  }\n\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n  this.code = code || 'server_error';\n  this.uri = uri;\n  this.status = status || 500;\n}\n/**\n * Inherit from `Error`.\n */\n\n\nAuthorizationError.prototype.__proto__ = Error.prototype;\n/**\n * Expose `AuthorizationError`.\n */\n\nmodule.exports = AuthorizationError;","map":{"version":3,"sources":["/home/astitva/Desktop/basic-react/node_modules/passport-oauth2/lib/errors/authorizationerror.js"],"names":["AuthorizationError","message","code","uri","status","Error","call","captureStackTrace","constructor","name","prototype","__proto__","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,kBAAT,CAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,GAA3C,EAAgDC,MAAhD,EAAwD;AACtD,MAAI,CAACA,MAAL,EAAa;AACX,YAAQF,IAAR;AACE,WAAK,eAAL;AAAsBE,QAAAA,MAAM,GAAG,GAAT;AAAc;;AACpC,WAAK,cAAL;AAAqBA,QAAAA,MAAM,GAAG,GAAT;AAAc;;AACnC,WAAK,yBAAL;AAAgCA,QAAAA,MAAM,GAAG,GAAT;AAAc;AAHhD;AAKD;;AAEDC,EAAAA,KAAK,CAACC,IAAN,CAAW,IAAX;AACAD,EAAAA,KAAK,CAACE,iBAAN,CAAwB,IAAxB,EAA8B,KAAKC,WAAnC;AACA,OAAKC,IAAL,GAAY,KAAKD,WAAL,CAAiBC,IAA7B;AACA,OAAKR,OAAL,GAAeA,OAAf;AACA,OAAKC,IAAL,GAAYA,IAAI,IAAI,cAApB;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKC,MAAL,GAAcA,MAAM,IAAI,GAAxB;AACD;AAED;;;;;AAGAJ,kBAAkB,CAACU,SAAnB,CAA6BC,SAA7B,GAAyCN,KAAK,CAACK,SAA/C;AAGA;;;;AAGAE,MAAM,CAACC,OAAP,GAAiBb,kBAAjB","sourcesContent":["/**\n * `AuthorizationError` error.\n *\n * AuthorizationError represents an error in response to an authorization\n * request.  For details, refer to RFC 6749, section 4.1.2.1.\n *\n * References:\n *   - [The OAuth 2.0 Authorization Framework](http://tools.ietf.org/html/rfc6749)\n *\n * @constructor\n * @param {String} [message]\n * @param {String} [code]\n * @param {String} [uri]\n * @param {Number} [status]\n * @api public\n */\nfunction AuthorizationError(message, code, uri, status) {\n  if (!status) {\n    switch (code) {\n      case 'access_denied': status = 403; break;\n      case 'server_error': status = 502; break;\n      case 'temporarily_unavailable': status = 503; break;\n    }\n  }\n\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n  this.code = code || 'server_error';\n  this.uri = uri;\n  this.status = status || 500;\n}\n\n/**\n * Inherit from `Error`.\n */\nAuthorizationError.prototype.__proto__ = Error.prototype;\n\n\n/**\n * Expose `AuthorizationError`.\n */\nmodule.exports = AuthorizationError;\n"]},"metadata":{},"sourceType":"script"}