{"ast":null,"code":"/**\n * Parse profile.\n *\n * Parses user profiles as fetched from Google's OpenID Connect-compatible user\n * info endpoint.\n *\n * The amount of detail in the profile varies based on the scopes granted by the\n * user.  The following scope values add additional data:\n *\n *     `profile` - basic profile information\n *     `email` - email address\n *\n * References:\n *   - https://developers.google.com/identity/protocols/OpenIDConnect\n *\n * @param {object|string} json\n * @return {object}\n * @access public\n */\nexports.parse = function (json) {\n  if ('string' == typeof json) {\n    json = JSON.parse(json);\n  }\n\n  var profile = {};\n  profile.id = json.sub;\n  profile.displayName = json.name;\n\n  if (json.family_name || json.given_name) {\n    profile.name = {\n      familyName: json.family_name,\n      givenName: json.given_name\n    };\n  }\n\n  if (json.email) {\n    profile.emails = [{\n      value: json.email,\n      verified: json.email_verified\n    }];\n  }\n\n  if (json.picture) {\n    profile.photos = [{\n      value: json.picture\n    }];\n  }\n\n  return profile;\n};","map":{"version":3,"sources":["/home/astitva/Desktop/basic-react/node_modules/passport-google-oauth20/lib/profile/openid.js"],"names":["exports","parse","json","JSON","profile","id","sub","displayName","name","family_name","given_name","familyName","givenName","email","emails","value","verified","email_verified","picture","photos"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAmBAA,OAAO,CAACC,KAAR,GAAgB,UAASC,IAAT,EAAe;AAC7B,MAAI,YAAY,OAAOA,IAAvB,EAA6B;AAC3BA,IAAAA,IAAI,GAAGC,IAAI,CAACF,KAAL,CAAWC,IAAX,CAAP;AACD;;AAED,MAAIE,OAAO,GAAG,EAAd;AACAA,EAAAA,OAAO,CAACC,EAAR,GAAaH,IAAI,CAACI,GAAlB;AACAF,EAAAA,OAAO,CAACG,WAAR,GAAsBL,IAAI,CAACM,IAA3B;;AACA,MAAIN,IAAI,CAACO,WAAL,IAAoBP,IAAI,CAACQ,UAA7B,EAAyC;AACvCN,IAAAA,OAAO,CAACI,IAAR,GAAe;AAAEG,MAAAA,UAAU,EAAET,IAAI,CAACO,WAAnB;AACEG,MAAAA,SAAS,EAAEV,IAAI,CAACQ;AADlB,KAAf;AAED;;AACD,MAAIR,IAAI,CAACW,KAAT,EAAgB;AACdT,IAAAA,OAAO,CAACU,MAAR,GAAiB,CAAE;AAAEC,MAAAA,KAAK,EAAEb,IAAI,CAACW,KAAd;AAAqBG,MAAAA,QAAQ,EAAEd,IAAI,CAACe;AAApC,KAAF,CAAjB;AACD;;AACD,MAAIf,IAAI,CAACgB,OAAT,EAAkB;AAChBd,IAAAA,OAAO,CAACe,MAAR,GAAiB,CAAC;AAAEJ,MAAAA,KAAK,EAAEb,IAAI,CAACgB;AAAd,KAAD,CAAjB;AACD;;AAED,SAAOd,OAAP;AACD,CApBD","sourcesContent":["/**\n * Parse profile.\n *\n * Parses user profiles as fetched from Google's OpenID Connect-compatible user\n * info endpoint.\n *\n * The amount of detail in the profile varies based on the scopes granted by the\n * user.  The following scope values add additional data:\n *\n *     `profile` - basic profile information\n *     `email` - email address\n *\n * References:\n *   - https://developers.google.com/identity/protocols/OpenIDConnect\n *\n * @param {object|string} json\n * @return {object}\n * @access public\n */\nexports.parse = function(json) {\n  if ('string' == typeof json) {\n    json = JSON.parse(json);\n  }\n  \n  var profile = {};\n  profile.id = json.sub;\n  profile.displayName = json.name;\n  if (json.family_name || json.given_name) {\n    profile.name = { familyName: json.family_name,\n                     givenName: json.given_name };\n  }\n  if (json.email) {\n    profile.emails = [ { value: json.email, verified: json.email_verified } ];\n  }\n  if (json.picture) {\n    profile.photos = [{ value: json.picture }];\n  }\n  \n  return profile;\n};\n"]},"metadata":{},"sourceType":"script"}